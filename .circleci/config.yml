version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0
  aws-cli: circleci/aws-cli@1.3.0
  
parameters:
  workflow-id:
    type: string
    default: "${CIRCLE_WORKFLOW_ID:0:7}"

jobs:
    run-lint:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - run:
            name: install dependencies
            command: |
              sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
              sudo chmod +x /bin/hadolint
        - run:
            name: Run Lint
            command: |
              hadolint Dockerfile
    build-docker:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout

        - setup_remote_docker:
            version: 19.03.13

        - run:
            name: Build Docker Image
            command: |
              export TAG=v${CIRCLE_BUILD_NUM}
              export IMAGE_NAME=capstone-aws-cloud-devops
              docker build -t kumatrx/$IMAGE_NAME:$TAG .
    test-docker:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout

        - setup_remote_docker:
            version: 19.03.13

        - run:
            name: Test Docker Image
            command: |
              export TAG=v${CIRCLE_BUILD_NUM}
              export IMAGE_NAME=capstone-aws-cloud-devops
              docker build -t kumatrx/$IMAGE_NAME:$TAG .
              docker image ls

    push-docker-image:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - setup_remote_docker:
            version: 19.03.13
        - run:
            name: Push Docker Image to Docker Hub
            command: |
              export TAG=v${CIRCLE_BUILD_NUM}
              export IMAGE_NAME=capstone-aws-cloud-devops
              docker build -t kumatrx/$IMAGE_NAME:$TAG .
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
              docker push kumatrx/$IMAGE_NAME:$TAG

    aws-eks-create-cluster:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - aws-cli/setup
        - run:
            name: Create EKS Cluster
            command: |
              mkdir -p eksctl_download
              curl --silent --location --retry 5 https://github.com/weaveworks/eksctl/releases/download/0.63.0/eksctl_Linux_arm64.tar.gz | tar xz -C eksctl_download
              sudo chmod +x eksctl_download/eksctl
              sudo mv eksctl_download/eksctl /usr/local/bin/
              sudo rmdir eksctl_download
              echo $(cat config/cluster.yml)
              eksctl create cluster -f config/cluster.yml

    deploy-application:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
        docker-image-name:
          description: |
            Name of the docker image to be deployed
          type: string
        version-info:
          description: |
            App version information
          type: string
        aws-region:
          description: |
            AWS region
          type: string
          default: "ap-northeast-1"
      steps:
        - checkout
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: << parameters.cluster-name >>
            install-kubectl: true
            aws-region: << parameters.aws-region >>
        - kubernetes/create-or-update-resource:
            resource-file-path: "deploy/deploy.yml"
            get-rollout-status: true
            resource-name: deployment/capstone
        - kubernetes/create-or-update-resource:
            resource-file-path: "deploy/deploy.yml"

workflows:

  default:
    jobs:
      - aws-eks-create-cluster
